using System;

namespace GenericsTasks
{
    // 1. Когда будешь работать с проектом, изначально настрой
    // архитектуру, продумай как что назвать, какие сделать папки, и,
    // возможно, другие сборки (библиотеки кода (dll)) и т.д.
    // 2. Паттерн репозиторий.
    // Почитай, что такое POCO, это очень используемый "паттерн".
    // По сути, это использование простых классов Entities (сущности).
    // Создай в проекте классы Player, Team, Match.
    // Они отвечают, как понятно из названия, за игрока, команду
    // и матч.
    // У игрока есть свойства - имя, текущая команда, список матчей
    // Соответственно, у команды есть название и список игроков
    // У Матча есть время, длительность, 2 соревнующихся команды, результат.
    // Кроме того, у всех Entities есть свойство Id, это общепринятая практика заводить
    // такое поле в сущностях, т.к. оно позволяет показать уникальность этой сущности,
    // (подумай, как это лучше всего сделать с помощью наследования).
    // 3. Создай Generic класс Repository, в котором будет
    // generic коллекция для любых созданных тобой Entities (игрок, команда, матч).
    // Добавь CRUD операции в этот класс (Create, update, delete),
    // ты уже как-то делал это.
    // 4. В методе Main продемонстрируй работу репозитория, типизированного любой из
    // созданных тобой сущностей (репозиторий для команды, игрока или матчей).
    public class Program
    {
        public static void Main(string[] args)
        {
            Console.WriteLine("Hello World!");
        }
    }
}
